plugins {
    id 'java'
    id "com.dorongold.task-tree" version "1.3.1" // Usage: gradle assemble taskTree
}

repositories {
    jcenter()
}

dependencies {
    // Types of dependencies:
    // {default}                - external dependency
    // project()                - another project
    // files() or fileTree()    - files in this project
    // module()                 - external module
    // gradleApi()              - the current Gradle API
    // localGroovy()            - the current Groovy API 
    
    implementation 'com.google.guava:guava:27.0.1-jre'
    testImplementation 'junit:junit:4.+' // dynamic versions: 4 over 4.something up to but not including 5 
}

test {

    /*
    beforeTest {
        logger.lifecycle("Running " + it)
    }
    */

    // Alternative Syntax to `testLogging { foo=bar }` but with auto-completion
    testLogging.showStandardStreams = true          // print all stdout/stderr output to console
    testLogging.minGranularity = 0                  // show class and method names
    testLogging.events = [ "started", "passed", "skipped", "failed"]

    /* Sadly no working auto-completion with this syntax:
    testLogging {
        events "started", "passed", "skipped", "failed"
    }
    */
}

mainClassName = "ch5.App"

task("runMyApp", type: JavaExec) {
    group = "My"
    dependsOn.add(classes)
    description = "Runs my App"

    doLast {
        javaexec {
            args = ["--help"]
            classpath = sourceSets.main.runtimeClasspath
            jvmArgs = ['-client']
        }
    }
}
