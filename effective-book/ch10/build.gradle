/** My custom task */
class InfoTask extends DefaultTask {

    /** An optional property for our task. */
    @Optional
    String prefix = "Current gradle version"

    /** Method with logic for that task. */
    @TaskAction
    def info() {
        println "$prefix: $project.gradle.gradleVersion"
    }
}

task("info", type: InfoTask, group: "my") {
    prefix = "Running Gradle"
}


class ConvertTask extends DefaultTask {
    @InputFile
    File source

    @OutputFile
    File output

    @TaskAction
    void convert() {
        def xml = new XmlSlurper().parse(source)
        output.withPrintWriter { writer ->
            xml.person.each { person ->
                writer.println "${person.name},${person.email}"
            }
        }
        println "Converted ${source.name} ${output.name}"
    }
}

task("convert", type: ConvertTask) {
    source = file("src/people.xml")
    output = file("$buildDir/convert-output.txt")
}
/*
task("build") {
    doLast {
        println "Done building buildSrc"
    }
}
*/
